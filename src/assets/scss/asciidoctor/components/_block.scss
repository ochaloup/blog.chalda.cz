// from https://github.com/asciidoctor/asciidoctor-stylesheet-factory/blob/main/sass/components/_asciidoc.scss

// AsciiDoc block styles

// these blocks don't receive a specialized margin
details,
.audioblock,
.imageblock,
.literalblock,
.listingblock,
.stemblock,
.videoblock {
  margin-bottom: $panel-margin-bottom;
}

details > summary:first-of-type {
  cursor: pointer;
  display: list-item;
  outline: none;
  margin-bottom: 0.75em;
}

.admonitionblock td.content,
.audioblock,
.exampleblock,
.imageblock,
.listingblock,
.literalblock,
.stemblock,
.openblock,
.paragraph,
.quoteblock,
table.tableblock,
.verseblock,
.videoblock,
.dlist,
.olist,
.ulist,
.qlist,
.hdlist {
  > .title {
    text-rendering: $subheader-text-rendering;
    text-align: left;
    @if $subheader-font-family {
      font-family: $subheader-font-family;
    }
    @if $subheader-font-size {
      font-size: $subheader-font-size;
    }
    @if $subheader-font-style {
      font-style: $subheader-font-style;
    }
  }
}

// trick to prevent caption from influencing width of an autowidth table
table.tableblock.fit-content > caption.title {
  white-space: nowrap;
  width: 0;
}

// Firefox sizes caption to width of table parent, so setting width: 100% works
// A better solution is to wrap the table in a figure/figcaption
//@supports (-moz-appearance:none) {
//  table.tableblock.fit-content > caption.title {
//    white-space: normal;
//  }
//  table.tableblock:not(.stretch) > caption.title {
//    width: 100%;
//  }
//}

// matches %lead
.paragraph.lead > p,
#preamble > .sectionbody > [class="paragraph"]:first-of-type p {
  font-size: $paragraph-font-size + em-calc(3.5);
  line-height: 1.6;
  color: $title-font-color;
  // QUESTION remove or reduce letter-spacing?
}

// disable implicit lead role inside AsciiDoc table cell
//table.tableblock #preamble > .sectionbody > [class="paragraph"]:first-of-type p {
//  font-size: inherit;
//}

.admonitionblock > table {
  border-collapse: separate;
  border: 0;
  background: none; // FIXME this wouldn't be required if a background was set on table.tableblock and not table
  width: 100%;
  margin-bottom: emCalc(6px);;
  td.icon {
    text-align: center;
    // FIXME use ems!
    width: 80px;
    img {
      max-width: none;
    }
    .title {
      //font-weight: $header-font-weight;
      font-weight: bold;
      font-family: $header-font-family;
      text-transform: uppercase;
    }
  }

  td.content {
    padding-left: emCalc(18px);
    padding-right: emCalc(20px);
    border-left: $hr-border-width $hr-border-style $hr-border-color;
    // FIXME use $aside-font-color
    color: $blockquote-cite-font-color;
    // QUESTION use opacity instead of blockquote-cite-font-color?
    //opacity: 0.75;
    word-wrap: anywhere;

    //> .paragraph:last-child > p {
    > :last-child > :last-child {
      margin-bottom: 0;
    }
  }
}

.exampleblock > .content {
  // FIXME add variable for $example-bg
  @include panel($body-bg, $panel-padding, false);
  @include radius;
  //> :last-child > :last-child,
  //// argh, review!
  //.olist > ol > li:last-child > :last-child,
  //.ulist > ul > li:last-child > :last-child,
  //.qlist > ol > li:last-child > :last-child {
  //  margin-bottom: 0;
  //}
}

.sidebarblock {
  @include panel(darken($panel-bg, 2%), $panel-padding, false);
  @include radius;

  > .content {
    > .title {
      @extend h3;
      color: $subheader-font-color;
      //color: darken($header-font-color, 15%); // name this panel-header-color?
      //line-height: 1.45; // a touch up from the header line height
      margin-top: 0;
      @if $sidebar-header-align {
        text-align: $sidebar-header-align;
      }
      @if $sidebar-header-border-size != 0 {
        border-width: $sidebar-header-border-size;
        border-style: $sidebar-header-border-style;
        border-color: $sidebar-header-border-color;
      }
    }
  }
}

.exampleblock > .content,
.sidebarblock > .content {
  // FIXME argh, review!
  > :last-child > :last-child,
  .olist > ol > li:last-child > :last-child,
  .ulist > ul > li:last-child > :last-child,
  .qlist > ol > li:last-child > :last-child {
    margin-bottom: 0;
  }
}

.literalblock pre,
.listingblock > .content > pre {
  @if $pre-border-size {
    border: $pre-border-size $pre-border-style $pre-border-color;
  }
  // FIXME make border radius on listing blocks configurable!
  @include radius;
  // set overflow-x just in case content refuses to break
  overflow-x: auto;
  // screens below breakpoint
  padding: $pre-padding;
  font-size: emCalc(13px);
  @media #{$small} {
    font-size: emCalc(14.5px);
  }
  @media #{$medium} {
    font-size: emCalc(16px);
  }
}

// NOTE if highlight class is absent or in first position, we know source highlighter is not active
.literalblock pre,
.listingblock > .content > pre:not(.highlight),
.listingblock > .content > pre[class="highlight"],
.listingblock > .content > pre[class^="highlight "] {
  background: $pre-bg;
}

.literalblock.output pre {
  // FIXME this doesn't work if pre-bg is an image!
  color: $pre-bg;
  background-color: $pre-font-color;
}

.listingblock > .content {
  // give floating language text a place to drop anchor
  position: relative;
}

.listingblock code[data-lang]:before {
  display: none;
  content: attr(data-lang);
  position: absolute;
  font-size: emCalc(12px);
  //top: 0.5rem; // 0.67em
  top: 0.425rem;
  right: 0.5rem; // 0.67em
  line-height: 1;
  text-transform: uppercase;
  color: inherit;
  opacity: 0.5;
}

.listingblock:hover code[data-lang]:before {
  display: block;
}

.listingblock.terminal pre .command:before {
  content: attr(data-prompt);
  padding-right: 0.5em;
  color: inherit;
  opacity: 0.5;
}

.listingblock.terminal pre .command:not([data-prompt]):before {
  content: "$";
}

// highlight.js themes put bg on <code>, so shift padding
.listingblock pre.highlightjs {
  padding: 0;
  > code {
    padding: $pre-padding;
    // FIXME make border radius on listing blocks configurable!
    @include radius;
  }
}

// overrides for built-in prettify styles
@if not $pre-border-size {
  .listingblock pre.prettyprint {
    border-width: 0;
  }
}

// NOTE set the lowest priority background color in case prettify style doesn't provide one
.prettyprint {
  background: $pre-bg;
}

pre.prettyprint .linenums {
  line-height: $pre-line-height;
  margin-left: 2em;
}

pre.prettyprint li {
  background: none;
  list-style-type: inherit;
  padding-left: 0;
}

pre.prettyprint li code[data-lang]:before {
  opacity: 1;
}

pre.prettyprint li:not(:first-child) code[data-lang]:before {
  display: none;
}

// overrides for built-in Pygments & Rouge styles
table.linenotable {
  border-collapse: separate;
  border: 0;
  margin-bottom: 0;
  background: none; // FIXME this wouldn't be required if a background was set on table.tableblock and not table
  td[class] {
    color: inherit;
    vertical-align: top;
    padding: 0;
    line-height: inherit;
    white-space: normal; // NOTE we don't want whitespace in the table elements themselves to cause a problem
  }
  td {
    &.code {
      padding-left: 0.75em;
    }
    &.linenos {
      border-right: 1px solid currentColor;
      opacity: 0.35;
      padding-right: 0.5em;
    }
  }
}

// NOTE pygments uses fixed-length line numbers (padded with spaces) in this case
pre.pygments .lineno {
  border-right: 1px solid currentColor;
  opacity: 0.35;
  display: inline-block;
  margin-right: 0.75em; // NOTE margin-right should match padding-left of code in table linenum-mode
  &:before {
    content: "";
    margin-right: -0.125em;
  }
}

// NOTE these overrides are needed to override hard-coded styles when pygments-css=inline
// NOTE we decided to handle these by patching the HTML
//table.pygments-table .linenodiv {
//  background: none !important;
//  padding-right: 0 !important;
//}

// TODO
// - add centered option using margin-left: auto; margin-right: auto; padding-left: 1.5em;
.quoteblock {
  margin: 0 1em $paragraph-margin-bottom 1.5em;
  display: table; // enables auto width
  &:not(.excerpt) > .title {
    margin-left: -1.5em;
    margin-bottom: 0.75em;
  }

  blockquote, p {
    color: $blockquote-font-color;
    font-size: 1.15rem;
    line-height: 1.75;
    word-spacing: 0.1em;
    letter-spacing: 0;
    font-style: italic;
    text-align: justify;
  }

  blockquote {
    margin: 0;
    padding: 0;
    border: 0;

    &:before {
      content: "\201c";
      float: left;
      //font-size: 3em;
      font-size: 2.75em;
      font-weight: bold;
      line-height: 0.6em; // use 0.67em if font-weight: normal
      margin-left: -0.6em;
      //color: $blockquote-cite-font-color;
      color: $subheader-font-color;
      text-shadow: 0 1px 2px rgba(0,0,0,0.1);
    }

    > .paragraph:last-child p {
      margin-bottom: 0;
    }
  }

  .attribution {
    margin-top: 0.75em;
    margin-right: 0.5ex;
    text-align: right;
  }
}

.verseblock {
  //margin: 0 0.5em $paragraph-margin-bottom 0.5em;
  margin: 0 1em $paragraph-margin-bottom 1em;
  pre {
    // FIXME make me a variable
    font-family: "Open Sans", "DejaVu Sans", sans-serif;
    font-size: 1.15rem;
    color: $blockquote-font-color;
    font-weight: 300;
    text-rendering: optimizeLegibility;
    strong {
      font-weight: 400;
    }
  }

  .attribution {
    margin-top: 1.25rem;
    margin-left: 0.5ex;
  }
}

.quoteblock,
.verseblock {
  .attribution {
    font-size: $blockquote-cite-font-size;
    line-height: 1.45;
    font-style: italic;
    br {
      display: none;
    }
    cite {
      display: block;
      //letter-spacing: -0.05em;
      letter-spacing: -0.025em;
      color: $blockquote-cite-font-color;
    }
  }
}

.quoteblock {
  &.abstract,
  &.excerpt,
  .quoteblock {
    blockquote {
      &:before {
        display: none;
      }
    }

    blockquote, p {
      line-height: 1.6;
      word-spacing: 0;
    }
  }

  &.abstract {
    margin: 0 1em $paragraph-margin-bottom 1em;
    display: block;
    > .title {
      margin: 0 0 0.375em 0;
      font-size: 1.15em;
      text-align: center;
    }
  }

  &.excerpt > blockquote,
  .quoteblock {
    padding: 0 0 0.25em 1em;
    border-left: 0.25em solid $hr-border-color;
  }

  &.excerpt,
  .quoteblock {
    margin-left: 0;
    blockquote, p {
      //color: rgba(0, 0, 0, 0.6);
      color: inherit;
      font-size: 1.0625rem;
    }
    .attribution {
      //color: rgba(0, 0, 0, 0.6);
      color: inherit;
      font-size: 0.85rem;
      text-align: left;
      margin-right: 0;
    }
  }
}

// NOTE max-width only works if the display is set to block (but that breaks border collapsing)
//table.tableblock {
//  max-width: 100%;
//}

p.tableblock:last-child {
  margin-bottom: 0;
}

// NOTE AsciiDoc table cell
td.tableblock > .content {
  // NOTE compensate for bottom margin on last block in AsciiDoc table cell
  margin-bottom: $paragraph-margin-bottom;
  > :last-child {
    margin-bottom: -$paragraph-margin-bottom;
  }
  word-wrap: anywhere;
}

table.tableblock, th.tableblock, td.tableblock {
  border: 0 solid $table-border-color;
}

table.grid-all > * > tr > * {
  border-width: $table-border-size;
}

table.grid-cols > * > tr > * {
  border-width: 0 $table-border-size;
}

table.grid-rows > * > tr > * {
  border-width: $table-border-size 0;
}

table.frame-all {
  border-width: $table-border-size;
}

table.frame-ends {
  border-width: $table-border-size 0;
}

table.frame-sides {
  border-width: 0 $table-border-size;
}

// alternative approach to apply frame using cell borders, but suffers from the colspan/rowspan problem
//table.frame-all > colgroup + * > :first-child > *,
//table.frame-ends > colgroup + * > :first-child > * {
//  border-top-width: $table-border-size;
//}
//
//table.frame-all > :last-child > :last-child > *,
//table.frame-ends > :last-child > :last-child > * {
//  border-bottom-width: $table-border-size;
//}
//
//table.frame-all > * > tr > :first-child,
//table.frame-sides > * > tr > :first-child {
//  border-left-width: $table-border-size;
//}
//
//table.frame-all > * > tr > :last-child,
//table.frame-sides > * > tr > :last-child {
//  border-right-width: $table-border-size;
//}

table.frame-none > colgroup + * > :first-child > *,
table.frame-sides > colgroup + * > :first-child > * {
  border-top-width: 0;
}

table.frame-none > :last-child > :last-child > *,
table.frame-sides > :last-child > :last-child > * {
  border-bottom-width: 0;
}

table.frame-none > * > tr > :first-child,
table.frame-ends > * > tr > :first-child {
  border-left-width: 0;
}

table.frame-none > * > tr > :last-child,
table.frame-ends > * > tr > :last-child {
  border-right-width: 0;
}

table.stripes-all tr,
table.stripes-odd tr:nth-of-type(odd),
table.stripes-even tr:nth-of-type(even),
table.stripes-hover tr:hover {
  background: $table-even-row-bg;
}

// NOTE removing default stripes using script instead
//table.stripes-none tr,
//table.stripes-odd tr:nth-of-type(even),
//table.stripes-even tr:nth-of-type(odd) {
//  background: none;
//}

@each $halign in (left, right, center) {
  th.halign-#{$halign},
  td.halign-#{$halign} {
    text-align: $halign;
  }
}

@each $valign in (top, bottom, middle) {
  th.valign-#{$valign},
  td.valign-#{$valign} {
    vertical-align: $valign;
  }
}

// NOTE Fix required in Foundation, user-agent stylesheet is overriding
table thead th,
table tfoot th {
  font-weight: $table-head-font-weight;
}

// vertical table header (block)
tbody tr th {
  display: $table-display;
  line-height: $table-line-height;
  background: $table-head-bg;
}

// vertical table header (content)
tbody tr th,
tfoot tr th {
  &, p {
    color: $table-head-font-color;
    font-weight: $table-head-font-weight;
  }
}

p.tableblock > code:only-child {
  background: none;
  padding: 0;
}

p.tableblock {
  font-size: 1em;
}

//td > div.verse {
//  white-space: pre;
//}
